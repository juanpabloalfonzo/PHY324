#N=2**8
a3=under_curve3(2**8)
mean_a3=np.mean(a3)
un_a3=np.std(a3)/10

#N=2**9
b3=under_curve3(2**9)
mean_b3=np.mean(b3)
un_b3=np.std(b3)/10

#N=2**10
c3=under_curve3(2**10)
mean_c3=np.mean(c3)
un_c3=np.std(c3)/10

#N=2**11
d3=under_curve3(2**11)
mean_d3=np.mean(d3)
un_d3=np.std(d3)/10

#N=2**12
e3=under_curve3(2**12)
mean_e3=np.mean(e3)
un_e3=np.std(e3)/10

#N=2**13
f3=under_curve3(2**13)
mean_f3=np.mean(f3)
un_f3=np.std(f3)/10

means3=np.array([mean_a3,mean_b3, mean_c3,mean_d3, mean_e3,mean_f3])
un3=np.array([un_a3,un_b3, un_c3,un_d3, un_e3,un_f3])

plt.semilogx(N,means2/N, basex=2)
plt.errorbar(N,means2/N,yerr=un2/N)
plt.xlabel("Number of Generated Points")
plt.ylabel('Ratio of Points Under Curve')
plt.title('Randomly Generated Points That Lie Under $Sin^2(1/x)$ for 0<x<1 and 0<y<1')
plt.show()
plt.figure()